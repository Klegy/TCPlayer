<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:applib="http://github.com/webmaster442/AppLib/WPF"
                    xmlns:soudvis="clr-namespace:WPFSoundVisualizationLib"
                    xmlns:local="clr-namespace:TCPlayer.Style">

    <local:FileNameConverter x:Key="FilenameConv"/>
    <local:NullorValueConverter x:Key="NullorValueConv"/>

    <SolidColorBrush x:Key="SpectrumBrush" Color="#2980b9"/>
    <SolidColorBrush x:Key="SpectrumPeakBrush" Color="#c0392b" />
    
    <SolidColorBrush x:Key="Background" Color="#ecf0f1"/>
    <SolidColorBrush x:Key="MenuBackground" Color="#2c3e50"/>
    <SolidColorBrush x:Key="MenuForeground" Color="#ecf0f1"/>

    <Style x:Key="Flat">
        <Setter Property="Control.Background" Value="{x:Null}" />
        <Setter Property="Control.BorderBrush" Value="{x:Null}" />
        <Style.Triggers>
            <Trigger Property="Control.IsMouseOver" Value="True">
                <Setter Property="Control.Background" Value="{x:Null}" />
                <Setter Property="Control.BorderBrush" Value="{x:Null}" />
                <Setter Property="Control.FontWeight" Value="Bold" />
            </Trigger>
            <Trigger Property="Control.IsFocused" Value="True">
                <Setter Property="Control.FontWeight" Value="Bold" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="PlayButtons" BasedOn="{StaticResource Flat}">
        <Setter Property="MinHeight" Value="48"/>
        <Setter Property="MinWidth" Value="48"/>
    </Style>

    <Style TargetType="{x:Type applib:FaImageButton}" x:Key="PlayImgButtons">
        <Setter Property="MinHeight" Value="48"/>
        <Setter Property="MinWidth" Value="48"/>
        <Setter Property="IconSize" Value="32"/>
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Style.Triggers>
            <Trigger Property="Control.IsMouseOver" Value="True">
                <Setter Property="Background" Value="{x:Null}" />
                <Setter Property="BorderBrush" Value="{x:Null}" />
                <Setter Property="FontWeight" Value="Bold" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="FontWeight" Value="Bold" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Menu">
        <Setter Property="Background" Value="{StaticResource MenuBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource MenuBackground}"/>
    </Style>

    <Style TargetType="applib:ImageAwesome" x:Key="Menu">
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Foreground" Value="{StaticResource MenuForeground}"/>
    </Style>

    <Style TargetType="MenuItem">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="{StaticResource MenuBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource MenuBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource MenuForeground}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Red"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Separator" x:Key="sp">
        <Setter Property="Background" Value="{StaticResource MenuBackground}"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Rectangle
                        Fill="{StaticResource MenuForeground}"
                        Height="2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="applib:AnimatedTabControl">
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <Style TargetType="TreeView">
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <Style TargetType="TabItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock 
                        FontSize="14"
                        Text="{Binding}">
                    </TextBlock>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock
                        Text="{Binding Converter={StaticResource FilenameConv}}"
                        ToolTip="{Binding}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type soudvis:SpectrumAnalyzer}">
        <Setter Property="BarStyle">
            <Setter.Value>
                <Style TargetType="{x:Type Rectangle}">
                    <Setter Property="Fill"
                            Value="{StaticResource SpectrumBrush}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="PeakStyle">
            <Setter.Value>
                <Style TargetType="{x:Type Rectangle}">
                    <Setter Property="Fill"
                            Value="{StaticResource SpectrumPeakBrush}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type soudvis:SpectrumAnalyzer}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Canvas Name="PART_SpectrumCanvas"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                ClipToBounds="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Border" x:Key="Overlay">
        <Setter Property="Panel.ZIndex" Value="100"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="BorderBrush" Value="Orange"/>
        <Setter Property="Margin" Value="15"/>
        <Setter Property="Background" Value="{StaticResource MenuBackground}"/>
        <Setter Property="Opacity" Value="0.98"/>
    </Style>

    <Style TargetType="CheckBox" x:Key="SettingsWindow">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>

    <Style TargetType="TextBlock" x:Key="Title">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{StaticResource MenuBackground}"/>
        <Setter Property="Margin" Value="10"/>
    </Style>

    <Style TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="Green"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate TargetType="{x:Type Slider}" x:Key="SliderHorizontal">
        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="0"/>
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <ProgressBar x:Name="TrackBackground"
                             VerticalAlignment="Center"
                             Height="5" 
                             Grid.Row="1"
                             Margin="5,0"
                             Minimum="{TemplateBinding Minimum}"
                             Maximum="{TemplateBinding Maximum}"
                             Value="{TemplateBinding Value}"/>
                <Track x:Name="PART_Track" Grid.Row="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}"/>
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}"/>
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb x:Name="Thumb" Background="Transparent"/>
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
    </ControlTemplate>

    <ControlTemplate TargetType="{x:Type Slider}" x:Key="SliderVertical">
        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0"/>
                    <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding MinWidth}"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ProgressBar x:Name="TrackBackground"
                             HorizontalAlignment="Center"
                             Orientation="Vertical"
                             Width="5"
                             Grid.Column="1"
                             Margin="0,5"
                             Minimum="{TemplateBinding Minimum}"
                             Maximum="{TemplateBinding Maximum}"
                             Value="{TemplateBinding Value}"/>
                <Track x:Name="PART_Track" Grid.Column="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}"/>
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}"/>
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb x:Name="Thumb" Background="Transparent"/>
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
    </ControlTemplate>

    <Style TargetType="{x:Type Slider}">
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Template" Value="{StaticResource SliderHorizontal}"/>
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Template" Value="{StaticResource SliderVertical}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Ellipse x:Name="Thumb" Height="24" Width="24" Fill="White"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Thumb" Property="Fill" Value="Green"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter TargetName="Thumb" Property="Fill" Value="Green"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>