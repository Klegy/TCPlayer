<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:applib="http://github.com/webmaster442/AppLib/WPF"
    xmlns:local="clr-namespace:TCPlayer.Style"
    xmlns:soudvis="clr-namespace:WPFSoundVisualizationLib">

    <local:FileNameConverter x:Key="FilenameConv" />
    <local:NullorValueConverter x:Key="NullorValueConv" />

    <SolidColorBrush
        x:Key="SpectrumBrush"
        Color="#2980b9" />
    <SolidColorBrush
        x:Key="SpectrumPeakBrush"
        Color="#c0392b" />

    <SolidColorBrush
        x:Key="Background"
        Color="#ecf0f1" />
    <SolidColorBrush
        x:Key="MenuBackground"
        Color="#2c3e50" />
    <SolidColorBrush
        x:Key="MenuForeground"
        Color="#ecf0f1" />

    <Style x:Key="Flat">
        <Setter Property="Control.Background" Value="{x:Null}" />
        <Setter Property="Control.BorderBrush" Value="{x:Null}" />
        <Style.Triggers>
            <Trigger Property="Control.IsMouseOver" Value="True">
                <Setter Property="Control.Background" Value="{x:Null}" />
                <Setter Property="Control.BorderBrush" Value="{x:Null}" />
                <Setter Property="Control.FontWeight" Value="Bold" />
            </Trigger>
            <Trigger Property="Control.IsFocused" Value="True">
                <Setter Property="Control.FontWeight" Value="Bold" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="PlayButtons"
        BasedOn="{StaticResource Flat}"
        TargetType="Button">
        <Setter Property="MinHeight" Value="48" />
        <Setter Property="MinWidth" Value="48" />
    </Style>

    <Style
        x:Key="PlayImgButtons"
        TargetType="{x:Type applib:FaImageButton}">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="ContentMargin" Value="0" />
        <Setter Property="IconSize" Value="32" />
        <Setter Property="MinHeight" Value="48" />
        <Setter Property="MinWidth" Value="48" />
        <Style.Triggers>
            <Trigger Property="Control.IsMouseOver" Value="True">
                <Setter Property="Background" Value="{x:Null}" />
                <Setter Property="BorderBrush" Value="{x:Null}" />
                <Setter Property="FontWeight" Value="Bold" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="FontWeight" Value="Bold" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Menu">
        <Setter Property="Background" Value="{StaticResource MenuBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource MenuBackground}" />
    </Style>

    <Style
        x:Key="Menu"
        TargetType="applib:ImageAwesome">
        <Setter Property="Foreground" Value="{StaticResource MenuForeground}" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Width" Value="16" />
    </Style>

    <Style TargetType="MenuItem">
        <Setter Property="Background" Value="{StaticResource MenuBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource MenuBackground}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="{StaticResource MenuForeground}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Red" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="sp"
        TargetType="Separator">
        <Setter Property="Background" Value="{StaticResource MenuBackground}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Rectangle
                        Height="2"
                        Fill="{StaticResource MenuForeground}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="applib:AnimatedTabControl">
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style TargetType="TreeView">
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style TargetType="TabItem">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock
                        FontSize="14"
                        Text="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBox">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock
                        Text="{Binding Converter={StaticResource FilenameConv}}"
                        ToolTip="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type soudvis:SpectrumAnalyzer}">
        <Setter Property="BarStyle">
            <Setter.Value>
                <Style TargetType="{x:Type Rectangle}">
                    <Setter Property="Fill" Value="{StaticResource SpectrumBrush}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="PeakStyle">
            <Setter.Value>
                <Style TargetType="{x:Type Rectangle}">
                    <Setter Property="Fill" Value="{StaticResource SpectrumPeakBrush}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type soudvis:SpectrumAnalyzer}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Canvas
                            Name="PART_SpectrumCanvas"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            ClipToBounds="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="Overlay"
        TargetType="Border">
        <Setter Property="Background" Value="{StaticResource MenuBackground}" />
        <Setter Property="BorderBrush" Value="Orange" />
        <Setter Property="BorderThickness" Value="3" />
        <Setter Property="Margin" Value="15" />
        <Setter Property="Opacity" Value="0.98" />
        <Setter Property="Panel.ZIndex" Value="100" />
    </Style>

    <Style
        x:Key="SettingsWindow"
        TargetType="CheckBox">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="Black" />
    </Style>

    <Style
        x:Key="Title"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource MenuBackground}" />
        <Setter Property="Margin" Value="10" />
    </Style>

    <Style TargetType="{x:Type ProgressBar}">
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="Green" />
    </Style>

    <Style TargetType="{x:Type RepeatButton}">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate
        x:Key="SliderHorizontal"
        TargetType="{x:Type Slider}">
        <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="0" />
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <ProgressBar
                    x:Name="TrackBackground"
                    Grid.Row="1"
                    Height="5"
                    Margin="5,0"
                    VerticalAlignment="Center"
                    Maximum="{TemplateBinding Maximum}"
                    Minimum="{TemplateBinding Minimum}"
                    Value="{TemplateBinding Value}" />
                <Track
                    x:Name="PART_Track"
                    Grid.Row="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
                            x:Name="Thumb"
                            Background="Transparent" />
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
    </ControlTemplate>

    <ControlTemplate
        x:Key="SliderVertical"
        TargetType="{x:Type Slider}">
        <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0" />
                    <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding MinWidth}" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ProgressBar
                    x:Name="TrackBackground"
                    Grid.Column="1"
                    Width="5"
                    Margin="0,5"
                    HorizontalAlignment="Center"
                    Maximum="{TemplateBinding Maximum}"
                    Minimum="{TemplateBinding Minimum}"
                    Orientation="Vertical"
                    Value="{TemplateBinding Value}" />
                <Track
                    x:Name="PART_Track"
                    Grid.Column="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
                            x:Name="Thumb"
                            Background="Transparent" />
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
    </ControlTemplate>

    <Style TargetType="{x:Type Slider}">
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Template" Value="{StaticResource SliderHorizontal}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="Template" Value="{StaticResource SliderVertical}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Ellipse
                        x:Name="Thumb"
                        Width="24"
                        Height="24"
                        Fill="White" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Thumb" Property="Fill" Value="Green" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter TargetName="Thumb" Property="Fill" Value="Green" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TabControl" x:Key="Main">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" Width="Auto"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.Resources>
                            <applib:TabControlTransitionSelector x:Key="TabControlTransitionSelectorKey" />
                        </Grid.Resources>
                        <ScrollViewer Grid.Row="0" Grid.Column="0" x:Name="HeaderPanel" MinHeight="27" VerticalScrollBarVisibility="Auto">
                            <TabPanel MinHeight="27" IsItemsHost="true" Margin="2,2,2,0" KeyboardNavigation.TabIndex="1" Background="Transparent"/>
                        </ScrollViewer>
                        <Border x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <!--<ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>-->
                            <applib:TransitionControl x:Name="PART_SelectedContentHost" Duration="00:00:01" Content="{TemplateBinding SelectedContent}" ContentTransitionSelector="{StaticResource TabControlTransitionSelectorKey}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
                            <Setter Property="Grid.ColumnSpan" TargetName="HeaderPanel" Value="2"/>
                            <Setter Property="HorizontalAlignment"  TargetName="HeaderPanel" Value="Right"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>